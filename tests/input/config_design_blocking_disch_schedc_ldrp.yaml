scenario: test_ldrp
run_settings:
  num_replications: 2
  run_time: 9960
  warmup_time: 1200
  
  # Uncomment the following to use max_arrivals as additional or alternate stopping condition
  # max_arrivals = 1000
  
  # h = hours
  base_time_unit: h
  
  # Comment out start_date line to use default of 2024-01-01
  # Use YYYY-mm-dd (i.e. %Y-%m-%d) format
  # use_calendar_time = 1 for yes, 0 for no
  use_calendar_time: 1
  start_date: 2024-01-01
  
 
outputs:
  occ_logs:
    path: ./output/logs
    write: 1
  occ_stats:
    path: ./output/stats
    write: 1
  stop_logs:
    path: ./output/logs
    write: 1
  visit_logs:
    path: ./output/logs
    write: 1
  summary_stats:
    path: ./output/stats
    write: 1

# Use toggles to turn random arrival streams on and off   
rand_arrival_rates:
    spont_labor: 0.20
    urgent_induced_labor: 0.00
    non_delivery_ldr: 0.05
    non_delivery_pp: 0.05

# 1=on, 0=off    
rand_arrival_toggles:
    spont_labor: 1
    urgent_induced_labor: 0
    non_delivery_ldr: 0
    non_delivery_pp: 0

# Use toggles to turn scheduled arrival streams on and off   
schedule_files:
    sched_csect: ./input/sched_c_long.txt
    sched_induced_labor: ./input/sched_induction_long.txt

# 1=on, 0=off    
sched_arrival_toggles:
    sched_csect: 0
    sched_induced_labor: 0

branching_probabilities:
    pct_spont_labor_aug: 0.0
    pct_spont_labor_to_c: 0.2
    pct_aug_labor_to_c: 0.06
    pct_sched_ind_to_c: 0.12
    pct_urg_ind_to_c: 0.12
    
# Comment out following line if you don't want to use time of day discharge patterns
# discharge_pattern_file: ./input/discharge_cdf.txt

# You can define input parameters to be used in los_distributions section
los_params:
    mean_los_csect: 1.0
    mean_los_obs: 2.4
    mean_los_labor_c: 12.0
    mean_los_ldrp_c: 72.0
    mean_los_ldrp_noc: 48.0
    mean_los_ldr_nondelivery: 36.0
    mean_los_pp_nondelivery: 48.0
    num_erlang_stages_csect: 4
    num_erlang_stages_obs: 1
    num_erlang_stages_labor_c: 2
    num_erlang_stages_ldrp: 8
    num_erlang_stages_ldr_nondelivery: 2
    num_erlang_stages_pp_nondelivery: 4



locations:
  OBS:
    capacity: 10
  LDRP:
    capacity: 1000
  CSECT:
    capacity: 6


random_number_streams:
  arrivals: 27568
  los: 31249
  
# For the los attribute, you can use a restricted set of numpy distributions parameterized via
# constants that are user defined parameters in the los_params section. 

# IMPORTANT: During development of new LDRP flow logic, only the first two patient types are being used. Volume
# is shut off via toggles and branching probs above.
#
# Also, in this scenario, patients who labor in LDRP and then need a C-section, are returned to their
# same bed in LDRP. Want to get logic working for case where patient keeps bed in one unit while visiting 
# another unit. In reality, we might use a traditional PP bed for such patients. We can model that as well.  
routes:
  RAND_SPONT_NAT:
    edges:
    - id: ENTRY_OBS
      from: ENTRY
      to: OBS
      # This is the default
      get_bed: 1  
      los: gamma(num_erlang_stages_obs, mean_los_obs / num_erlang_stages_obs)
      # This is the default
      release_bed: 1
    - id: OBS_LDRP
      from: OBS
      to: LDRP
      los: gamma(num_erlang_stages_ldrp, mean_los_ldrp_noc / num_erlang_stages_ldrp)
      blocking_adjustment: delay
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT
  RAND_SPONT_CSECT:
    edges:
    - id: ENTRY_OBS
      from: ENTRY
      to: OBS
      los: gamma(num_erlang_stages_obs, mean_los_obs / num_erlang_stages_obs)
    - id: OBS_LDRP
      from: OBS
      to: LDRP
      los: gamma(num_erlang_stages_labor_c, mean_los_labor_c / num_erlang_stages_labor_c)
      blocking_adjustment: delay
    - id: LDRP_CSECT
      from: LDRP
      to: CSECT
      los: gamma(num_erlang_stages_csect, mean_los_csect / num_erlang_stages_csect)
      # Keep slot in LDRP while visiting CSECT
      release_bed: 0
    - id: CSECT_LDRP
      from: CSECT
      to: LDRP
      # Do NOT get another LDRP bed
      get_bed: 0
      los: gamma(num_erlang_stages_ldrp, mean_los_ldrp_c / num_erlang_stages_ldrp)
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT
  RAND_AUG_NAT:
    edges:
    - id: ENTRY_OBS
      from: ENTRY
      to: OBS
      los: gamma(num_erlang_stages_obs, mean_los_obs / num_erlang_stages_obs)
    - id: OBS_LDRP
      from: OBS
      to: LDRP
      los: gamma(num_erlang_stages_ldrp, mean_los_ldrp_noc / num_erlang_stages_ldrp)
      blocking_adjustment: delay
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT
  RAND_AUG_CSECT:
    edges:
    - id: ENTRY_OBS
      from: ENTRY
      to: OBS
      los: gamma(num_erlang_stages_obs, mean_los_obs / num_erlang_stages_obs)
    - id: OBS_LDRP
      from: OBS
      to: LDRP
      los: gamma(num_erlang_stages_labor_c, mean_los_labor_c / num_erlang_stages_labor_c)
      blocking_adjustment: delay
      keep: 1
    - id: LDRP_CSECT
      from: LDRP
      to: CSECT
      los: gamma(num_erlang_stages_csect, mean_los_csect / num_erlang_stages_csect)
    - id: CSECT_LDRP
      from: CSECT
      to: LDRP
      los: gamma(num_erlang_stages_ldrp, mean_los_ldrp_c / num_erlang_stages_ldrp)
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT
  SCHED_CSECT:
    edges:
    - id: ENTRY_CSECT
      from: ENTRY
      to: CSECT
      los: gamma(num_erlang_stages_csect, mean_los_csect / num_erlang_stages_csect)
    - id: CSECT_LDRP
      from: CSECT
      to: LDRP
      los: choice([24.0, 48.0, 72.0, 96.0, 120.0], p=[0.05, 0.4, 0.4, 0.10, 0.05])
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT
  SCHED_IND_NAT:
    edges:
    - id: ENTRY_LDRP
      from: ENTRY
      to: LDRP
      los: gamma(num_erlang_stages_ldrp, mean_los_ldrp_noc / num_erlang_stages_ldrp)
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT
  SCHED_IND_CSECT:
    edges:
    - id: ENTRY_LDRP
      from: ENTRY
      to: LDRP
      los: gamma(num_erlang_stages_labor_c, mean_los_labor_c / num_erlang_stages_labor_c)
      keep: 1
    - id: LDRP_CSECT
      from: LDRP
      to: CSECT
      los: gamma(num_erlang_stages_csect, mean_los_csect / num_erlang_stages_csect)
    - id: CSECT_LDRP
      from: CSECT
      to: LDRP
      los: choice([24.0, 48.0, 72.0, 96.0, 120.0], p=[0.05, 0.4, 0.4, 0.10, 0.05])
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT
  RAND_NONDELIV_LDR:
    edges:
    - id: ENTRY_LDRP
      from: ENTRY
      to: LDRP
      los: gamma(num_erlang_stages_ldr_nondelivery, mean_los_ldr_nondelivery / num_erlang_stages_ldr_nondelivery)
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT
  RAND_NONDELIV_PP:
    edges:
    - id: ENTRY_LDRP
      from: ENTRY
      to: LDRP
      los: gamma(num_erlang_stages_pp_nondelivery, mean_los_pp_nondelivery / num_erlang_stages_pp_nondelivery)
      discharge_adjustment: ./input/discharge_pdf.txt
    - id: LDRP_EXIT
      from: LDRP
      to: EXIT

    
    


